module RecFNToRecFN_1(
  input   clock,
  input   reset,
  input  [32:0] io_in,
  input  [1:0] io_roundingMode,
  output [64:0] io_out,
  output [4:0] io_exceptionFlags
);
  wire [8:0] _T_10;
  wire [2:0] _T_11;
  wire  _T_13;
  wire [1:0] _T_14;
  wire  _T_16;
  wire  _T_24_sign;
  wire  _T_24_isNaN;
  wire  _T_24_isInf;
  wire  _T_24_isZero;
  wire [9:0] _T_24_sExp;
  wire [26:0] _T_24_sig;
  wire  _T_31;
  wire  _T_32;
  wire  _T_33;
  wire  _T_36;
  wire  _T_37;
  wire [9:0] _T_38;
  wire  _T_41;
  wire [22:0] _T_42;
  wire [24:0] _T_44;
  wire [1:0] _T_45;
  wire [26:0] _T_46;
  wire [11:0] _GEN_0;
  wire [12:0] _T_48;
  wire  outRawFloat_sign;
  wire  outRawFloat_isNaN;
  wire  outRawFloat_isInf;
  wire  outRawFloat_isZero;
  wire [12:0] outRawFloat_sExp;
  wire [55:0] outRawFloat_sig;
  wire [55:0] _GEN_1;
  wire [55:0] _T_62;
  wire  _T_63;
  wire  _T_65;
  wire  invalidExc;
  wire  _T_67;
  wire  _T_68;
  wire [11:0] _T_69;
  wire [11:0] _T_72;
  wire [11:0] _T_73;
  wire [11:0] _T_74;
  wire  _T_75;
  wire [11:0] _T_78;
  wire [11:0] _T_79;
  wire [11:0] _T_80;
  wire [11:0] _T_83;
  wire [11:0] _T_84;
  wire [11:0] _T_87;
  wire [11:0] _T_88;
  wire [51:0] _T_91;
  wire [51:0] _T_92;
  wire [12:0] _T_93;
  wire [64:0] _T_94;
  wire [4:0] _T_96;
  assign io_out = _T_94;
  assign io_exceptionFlags = _T_96;
  assign _T_10 = io_in[31:23];
  assign _T_11 = _T_10[8:6];
  assign _T_13 = _T_11 == 3'h0;
  assign _T_14 = _T_10[8:7];
  assign _T_16 = _T_14 == 2'h3;
  assign _T_24_sign = _T_31;
  assign _T_24_isNaN = _T_33;
  assign _T_24_isInf = _T_37;
  assign _T_24_isZero = _T_13;
  assign _T_24_sExp = _T_38;
  assign _T_24_sig = _T_46;
  assign _T_31 = io_in[32];
  assign _T_32 = _T_10[6];
  assign _T_33 = _T_16 & _T_32;
  assign _T_36 = _T_32 == 1'h0;
  assign _T_37 = _T_16 & _T_36;
  assign _T_38 = {1'b0,$signed(_T_10)};
  assign _T_41 = _T_13 == 1'h0;
  assign _T_42 = io_in[22:0];
  assign _T_44 = {_T_42,2'h0};
  assign _T_45 = {1'h0,_T_41};
  assign _T_46 = {_T_45,_T_44};
  assign _GEN_0 = {{2{_T_24_sExp[9]}},_T_24_sExp};
  assign _T_48 = $signed(_GEN_0) + $signed(12'sh700);
  assign outRawFloat_sign = _T_24_sign;
  assign outRawFloat_isNaN = _T_24_isNaN;
  assign outRawFloat_isInf = _T_24_isInf;
  assign outRawFloat_isZero = _T_24_isZero;
  assign outRawFloat_sExp = _T_48;
  assign outRawFloat_sig = _T_62;
  assign _GEN_1 = {{29'd0}, _T_24_sig};
  assign _T_62 = _GEN_1 << 29;
  assign _T_63 = outRawFloat_sig[53];
  assign _T_65 = _T_63 == 1'h0;
  assign invalidExc = outRawFloat_isNaN & _T_65;
  assign _T_67 = outRawFloat_isNaN == 1'h0;
  assign _T_68 = outRawFloat_sign & _T_67;
  assign _T_69 = outRawFloat_sExp[11:0];
  assign _T_72 = outRawFloat_isZero ? 12'hc00 : 12'h0;
  assign _T_73 = ~ _T_72;
  assign _T_74 = _T_69 & _T_73;
  assign _T_75 = outRawFloat_isZero | outRawFloat_isInf;
  assign _T_78 = _T_75 ? 12'h200 : 12'h0;
  assign _T_79 = ~ _T_78;
  assign _T_80 = _T_74 & _T_79;
  assign _T_83 = outRawFloat_isInf ? 12'hc00 : 12'h0;
  assign _T_84 = _T_80 | _T_83;
  assign _T_87 = outRawFloat_isNaN ? 12'he00 : 12'h0;
  assign _T_88 = _T_84 | _T_87;
  assign _T_91 = outRawFloat_sig[53:2];
  assign _T_92 = outRawFloat_isNaN ? 52'h8000000000000 : _T_91;
  assign _T_93 = {_T_68,_T_88};
  assign _T_94 = {_T_93,_T_92};
  assign _T_96 = {invalidExc,4'h0};
endmodule