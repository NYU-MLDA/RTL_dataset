module RoundRawFNToRecFN(
  input   clock,
  input   reset,
  input   io_invalidExc,
  input   io_infiniteExc,
  input   io_in_sign,
  input   io_in_isNaN,
  input   io_in_isInf,
  input   io_in_isZero,
  input  [9:0] io_in_sExp,
  input  [26:0] io_in_sig,
  input  [1:0] io_roundingMode,
  output [32:0] io_out,
  output [4:0] io_exceptionFlags
);
  wire  roundingMode_nearest_even;
  wire  roundingMode_min;
  wire  roundingMode_max;
  wire  _T_26;
  wire  _T_28;
  wire  _T_29;
  wire  roundMagUp;
  wire  doShiftSigDown1;
  wire  isNegExp;
  wire [24:0] _T_34;
  wire [8:0] _T_35;
  wire [8:0] _T_36;
  wire  _T_37;
  wire [7:0] _T_38;
  wire  _T_39;
  wire [6:0] _T_40;
  wire  _T_41;
  wire [5:0] _T_42;
  wire [64:0] _T_45;
  wire [21:0] _T_46;
  wire [15:0] _T_47;
  wire [7:0] _T_52;
  wire [15:0] _T_53;
  wire [7:0] _T_54;
  wire [15:0] _GEN_0;
  wire [15:0] _T_55;
  wire [15:0] _T_57;
  wire [15:0] _T_58;
  wire [11:0] _T_62;
  wire [15:0] _GEN_1;
  wire [15:0] _T_63;
  wire [11:0] _T_64;
  wire [15:0] _GEN_2;
  wire [15:0] _T_65;
  wire [15:0] _T_67;
  wire [15:0] _T_68;
  wire [13:0] _T_72;
  wire [15:0] _GEN_3;
  wire [15:0] _T_73;
  wire [13:0] _T_74;
  wire [15:0] _GEN_4;
  wire [15:0] _T_75;
  wire [15:0] _T_77;
  wire [15:0] _T_78;
  wire [14:0] _T_82;
  wire [15:0] _GEN_5;
  wire [15:0] _T_83;
  wire [14:0] _T_84;
  wire [15:0] _GEN_6;
  wire [15:0] _T_85;
  wire [15:0] _T_87;
  wire [15:0] _T_88;
  wire [5:0] _T_89;
  wire [3:0] _T_90;
  wire [1:0] _T_91;
  wire  _T_92;
  wire  _T_93;
  wire [1:0] _T_94;
  wire [1:0] _T_95;
  wire  _T_96;
  wire  _T_97;
  wire [1:0] _T_98;
  wire [3:0] _T_99;
  wire [1:0] _T_100;
  wire  _T_101;
  wire  _T_102;
  wire [1:0] _T_103;
  wire [5:0] _T_104;
  wire [21:0] _T_105;
  wire [21:0] _T_106;
  wire [21:0] _T_107;
  wire [21:0] _T_108;
  wire [24:0] _T_110;
  wire [2:0] _T_115;
  wire [1:0] _T_116;
  wire  _T_117;
  wire  _T_118;
  wire [1:0] _T_119;
  wire  _T_120;
  wire [2:0] _T_121;
  wire [2:0] _T_123;
  wire [24:0] _T_124;
  wire [24:0] _T_126;
  wire [24:0] _T_127;
  wire [24:0] _GEN_7;
  wire [24:0] _T_128;
  wire [26:0] roundMask;
  wire [27:0] _T_130;
  wire [26:0] shiftedRoundMask;
  wire [26:0] _T_131;
  wire [26:0] roundPosMask;
  wire [26:0] _T_132;
  wire  roundPosBit;
  wire [26:0] _T_134;
  wire  anyRoundExtra;
  wire  anyRound;
  wire  _T_136;
  wire  _T_137;
  wire  _T_138;
  wire [26:0] _T_139;
  wire [24:0] _T_140;
  wire [25:0] _T_142;
  wire  _T_145;
  wire  _T_146;
  wire [25:0] _T_147;
  wire [25:0] _T_149;
  wire [25:0] _T_150;
  wire [25:0] _T_151;
  wire [26:0] _T_152;
  wire [26:0] _T_153;
  wire [24:0] _T_154;
  wire [25:0] roundedSig;
  wire [1:0] _T_155;
  wire [2:0] _T_156;
  wire [9:0] _GEN_8;
  wire [10:0] sRoundedExp;
  wire [8:0] common_expOut;
  wire [22:0] _T_157;
  wire [22:0] _T_158;
  wire [22:0] common_fractOut;
  wire [3:0] _T_159;
  wire  common_overflow;
  wire  common_totalUnderflow;
  wire [8:0] _T_164;
  wire [9:0] _GEN_9;
  wire  _T_165;
  wire  common_underflow;
  wire  isNaNOut;
  wire  notNaN_isSpecialInfOut;
  wire  _T_167;
  wire  _T_169;
  wire  _T_170;
  wire  _T_172;
  wire  commonCase;
  wire  overflow;
  wire  underflow;
  wire  _T_173;
  wire  inexact;
  wire  overflow_roundMagUp;
  wire  _T_174;
  wire  pegMinNonzeroMagOut;
  wire  _T_175;
  wire  _T_177;
  wire  pegMaxFiniteMagOut;
  wire  _T_178;
  wire  notNaN_isInfOut;
  wire  signOut;
  wire  _T_180;
  wire [8:0] _T_183;
  wire [8:0] _T_184;
  wire [8:0] _T_185;
  wire [8:0] _T_189;
  wire [8:0] _T_190;
  wire [8:0] _T_191;
  wire [8:0] _T_194;
  wire [8:0] _T_195;
  wire [8:0] _T_196;
  wire [8:0] _T_199;
  wire [8:0] _T_200;
  wire [8:0] _T_201;
  wire [8:0] _T_204;
  wire [8:0] _T_205;
  wire [8:0] _T_208;
  wire [8:0] _T_209;
  wire [8:0] _T_212;
  wire [8:0] _T_213;
  wire [8:0] _T_216;
  wire [8:0] expOut;
  wire  _T_217;
  wire [22:0] _T_221;
  wire [22:0] _T_222;
  wire [22:0] _T_226;
  wire [22:0] fractOut;
  wire [9:0] _T_227;
  wire [32:0] _T_228;
  wire [1:0] _T_229;
  wire [1:0] _T_230;
  wire [2:0] _T_231;
  wire [4:0] _T_232;
  assign io_out = _T_228;
  assign io_exceptionFlags = _T_232;
  assign roundingMode_nearest_even = io_roundingMode == 2'h0;
  assign roundingMode_min = io_roundingMode == 2'h2;
  assign roundingMode_max = io_roundingMode == 2'h3;
  assign _T_26 = roundingMode_min & io_in_sign;
  assign _T_28 = io_in_sign == 1'h0;
  assign _T_29 = roundingMode_max & _T_28;
  assign roundMagUp = _T_26 | _T_29;
  assign doShiftSigDown1 = io_in_sig[26];
  assign isNegExp = $signed(io_in_sExp) < $signed(10'sh0);
  assign _T_34 = isNegExp ? 25'h1ffffff : 25'h0;
  assign _T_35 = io_in_sExp[8:0];
  assign _T_36 = ~ _T_35;
  assign _T_37 = _T_36[8];
  assign _T_38 = _T_36[7:0];
  assign _T_39 = _T_38[7];
  assign _T_40 = _T_38[6:0];
  assign _T_41 = _T_40[6];
  assign _T_42 = _T_40[5:0];
  assign _T_45 = $signed(65'sh10000000000000000) >>> _T_42;
  assign _T_46 = _T_45[63:42];
  assign _T_47 = _T_46[15:0];
  assign _T_52 = _T_47[15:8];
  assign _T_53 = {{8'd0}, _T_52};
  assign _T_54 = _T_47[7:0];
  assign _GEN_0 = {{8'd0}, _T_54};
  assign _T_55 = _GEN_0 << 8;
  assign _T_57 = _T_55 & 16'hff00;
  assign _T_58 = _T_53 | _T_57;
  assign _T_62 = _T_58[15:4];
  assign _GEN_1 = {{4'd0}, _T_62};
  assign _T_63 = _GEN_1 & 16'hf0f;
  assign _T_64 = _T_58[11:0];
  assign _GEN_2 = {{4'd0}, _T_64};
  assign _T_65 = _GEN_2 << 4;
  assign _T_67 = _T_65 & 16'hf0f0;
  assign _T_68 = _T_63 | _T_67;
  assign _T_72 = _T_68[15:2];
  assign _GEN_3 = {{2'd0}, _T_72};
  assign _T_73 = _GEN_3 & 16'h3333;
  assign _T_74 = _T_68[13:0];
  assign _GEN_4 = {{2'd0}, _T_74};
  assign _T_75 = _GEN_4 << 2;
  assign _T_77 = _T_75 & 16'hcccc;
  assign _T_78 = _T_73 | _T_77;
  assign _T_82 = _T_78[15:1];
  assign _GEN_5 = {{1'd0}, _T_82};
  assign _T_83 = _GEN_5 & 16'h5555;
  assign _T_84 = _T_78[14:0];
  assign _GEN_6 = {{1'd0}, _T_84};
  assign _T_85 = _GEN_6 << 1;
  assign _T_87 = _T_85 & 16'haaaa;
  assign _T_88 = _T_83 | _T_87;
  assign _T_89 = _T_46[21:16];
  assign _T_90 = _T_89[3:0];
  assign _T_91 = _T_90[1:0];
  assign _T_92 = _T_91[0];
  assign _T_93 = _T_91[1];
  assign _T_94 = {_T_92,_T_93};
  assign _T_95 = _T_90[3:2];
  assign _T_96 = _T_95[0];
  assign _T_97 = _T_95[1];
  assign _T_98 = {_T_96,_T_97};
  assign _T_99 = {_T_94,_T_98};
  assign _T_100 = _T_89[5:4];
  assign _T_101 = _T_100[0];
  assign _T_102 = _T_100[1];
  assign _T_103 = {_T_101,_T_102};
  assign _T_104 = {_T_99,_T_103};
  assign _T_105 = {_T_88,_T_104};
  assign _T_106 = ~ _T_105;
  assign _T_107 = _T_41 ? 22'h0 : _T_106;
  assign _T_108 = ~ _T_107;
  assign _T_110 = {_T_108,3'h7};
  assign _T_115 = _T_45[2:0];
  assign _T_116 = _T_115[1:0];
  assign _T_117 = _T_116[0];
  assign _T_118 = _T_116[1];
  assign _T_119 = {_T_117,_T_118};
  assign _T_120 = _T_115[2];
  assign _T_121 = {_T_119,_T_120};
  assign _T_123 = _T_41 ? _T_121 : 3'h0;
  assign _T_124 = _T_39 ? _T_110 : {{22'd0}, _T_123};
  assign _T_126 = _T_37 ? _T_124 : 25'h0;
  assign _T_127 = _T_34 | _T_126;
  assign _GEN_7 = {{24'd0}, doShiftSigDown1};
  assign _T_128 = _T_127 | _GEN_7;
  assign roundMask = {_T_128,2'h3};
  assign _T_130 = {isNegExp,roundMask};
  assign shiftedRoundMask = _T_130[27:1];
  assign _T_131 = ~ shiftedRoundMask;
  assign roundPosMask = _T_131 & roundMask;
  assign _T_132 = io_in_sig & roundPosMask;
  assign roundPosBit = _T_132 != 27'h0;
  assign _T_134 = io_in_sig & shiftedRoundMask;
  assign anyRoundExtra = _T_134 != 27'h0;
  assign anyRound = roundPosBit | anyRoundExtra;
  assign _T_136 = roundingMode_nearest_even & roundPosBit;
  assign _T_137 = roundMagUp & anyRound;
  assign _T_138 = _T_136 | _T_137;
  assign _T_139 = io_in_sig | roundMask;
  assign _T_140 = _T_139[26:2];
  assign _T_142 = _T_140 + 25'h1;
  assign _T_145 = anyRoundExtra == 1'h0;
  assign _T_146 = _T_136 & _T_145;
  assign _T_147 = roundMask[26:1];
  assign _T_149 = _T_146 ? _T_147 : 26'h0;
  assign _T_150 = ~ _T_149;
  assign _T_151 = _T_142 & _T_150;
  assign _T_152 = ~ roundMask;
  assign _T_153 = io_in_sig & _T_152;
  assign _T_154 = _T_153[26:2];
  assign roundedSig = _T_138 ? _T_151 : {{1'd0}, _T_154};
  assign _T_155 = roundedSig[25:24];
  assign _T_156 = {1'b0,$signed(_T_155)};
  assign _GEN_8 = {{7{_T_156[2]}},_T_156};
  assign sRoundedExp = $signed(io_in_sExp) + $signed(_GEN_8);
  assign common_expOut = sRoundedExp[8:0];
  assign _T_157 = roundedSig[23:1];
  assign _T_158 = roundedSig[22:0];
  assign common_fractOut = doShiftSigDown1 ? _T_157 : _T_158;
  assign _T_159 = sRoundedExp[10:7];
  assign common_overflow = $signed(_T_159) >= $signed(4'sh3);
  assign common_totalUnderflow = $signed(sRoundedExp) < $signed(11'sh6b);
  assign _T_164 = doShiftSigDown1 ? $signed(9'sh81) : $signed(9'sh82);
  assign _GEN_9 = {{1{_T_164[8]}},_T_164};
  assign _T_165 = $signed(io_in_sExp) < $signed(_GEN_9);
  assign common_underflow = anyRound & _T_165;
  assign isNaNOut = io_invalidExc | io_in_isNaN;
  assign notNaN_isSpecialInfOut = io_infiniteExc | io_in_isInf;
  assign _T_167 = isNaNOut == 1'h0;
  assign _T_169 = notNaN_isSpecialInfOut == 1'h0;
  assign _T_170 = _T_167 & _T_169;
  assign _T_172 = io_in_isZero == 1'h0;
  assign commonCase = _T_170 & _T_172;
  assign overflow = commonCase & common_overflow;
  assign underflow = commonCase & common_underflow;
  assign _T_173 = commonCase & anyRound;
  assign inexact = overflow | _T_173;
  assign overflow_roundMagUp = roundingMode_nearest_even | roundMagUp;
  assign _T_174 = commonCase & common_totalUnderflow;
  assign pegMinNonzeroMagOut = _T_174 & roundMagUp;
  assign _T_175 = commonCase & overflow;
  assign _T_177 = overflow_roundMagUp == 1'h0;
  assign pegMaxFiniteMagOut = _T_175 & _T_177;
  assign _T_178 = overflow & overflow_roundMagUp;
  assign notNaN_isInfOut = notNaN_isSpecialInfOut | _T_178;
  assign signOut = isNaNOut ? 1'h0 : io_in_sign;
  assign _T_180 = io_in_isZero | common_totalUnderflow;
  assign _T_183 = _T_180 ? 9'h1c0 : 9'h0;
  assign _T_184 = ~ _T_183;
  assign _T_185 = common_expOut & _T_184;
  assign _T_189 = pegMinNonzeroMagOut ? 9'h194 : 9'h0;
  assign _T_190 = ~ _T_189;
  assign _T_191 = _T_185 & _T_190;
  assign _T_194 = pegMaxFiniteMagOut ? 9'h80 : 9'h0;
  assign _T_195 = ~ _T_194;
  assign _T_196 = _T_191 & _T_195;
  assign _T_199 = notNaN_isInfOut ? 9'h40 : 9'h0;
  assign _T_200 = ~ _T_199;
  assign _T_201 = _T_196 & _T_200;
  assign _T_204 = pegMinNonzeroMagOut ? 9'h6b : 9'h0;
  assign _T_205 = _T_201 | _T_204;
  assign _T_208 = pegMaxFiniteMagOut ? 9'h17f : 9'h0;
  assign _T_209 = _T_205 | _T_208;
  assign _T_212 = notNaN_isInfOut ? 9'h180 : 9'h0;
  assign _T_213 = _T_209 | _T_212;
  assign _T_216 = isNaNOut ? 9'h1c0 : 9'h0;
  assign expOut = _T_213 | _T_216;
  assign _T_217 = common_totalUnderflow | isNaNOut;
  assign _T_221 = isNaNOut ? 23'h400000 : 23'h0;
  assign _T_222 = _T_217 ? _T_221 : common_fractOut;
  assign _T_226 = pegMaxFiniteMagOut ? 23'h7fffff : 23'h0;
  assign fractOut = _T_222 | _T_226;
  assign _T_227 = {signOut,expOut};
  assign _T_228 = {_T_227,fractOut};
  assign _T_229 = {underflow,inexact};
  assign _T_230 = {io_invalidExc,io_infiniteExc};
  assign _T_231 = {_T_230,overflow};
  assign _T_232 = {_T_231,_T_229};
endmodule